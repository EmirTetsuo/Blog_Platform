[{"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\index.js":"1","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\UpdateUser.jsx":"2","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\MainPage.jsx":"3","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\PostsPage.jsx":"4","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\PostPage.jsx":"5","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\AddPostPage.jsx":"6","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\LoginPage.jsx":"7","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\EditPostPage.jsx":"8","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\Dashboard.jsx":"9","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\RegisterPage.jsx":"10","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\app\\App.js":"11","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\store.js":"12","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\404.jsx":"13","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\app\\layout\\Layout.jsx":"14","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\auth\\authSlice.js":"15","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\comment\\commentSlice.js":"16","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\post\\postSlice.js":"17","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\api\\axios.js":"18","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\router\\config.js":"19","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\PostItem.jsx":"20","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\CommentItem.jsx":"21","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\Navbar.jsx":"22","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\MainPageSideBar.jsx":"23","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\DashBoardSideBar.jsx":"24","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\PopularPosts.jsx":"25","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\features\\PostItemContent.jsx":"26","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\features\\PostItemBottom.jsx":"27","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\features\\PostItemTop.jsx":"28"},{"size":466,"mtime":1746002020416,"results":"29","hashOfConfig":"30"},{"size":4113,"mtime":1746002020506,"results":"31","hashOfConfig":"30"},{"size":5466,"mtime":1746018614455,"results":"32","hashOfConfig":"30"},{"size":4892,"mtime":1747729757887,"results":"33","hashOfConfig":"30"},{"size":3606,"mtime":1746002020506,"results":"34","hashOfConfig":"30"},{"size":8872,"mtime":1746002020416,"results":"35","hashOfConfig":"30"},{"size":3317,"mtime":1746002020506,"results":"36","hashOfConfig":"30"},{"size":9337,"mtime":1746002020461,"results":"37","hashOfConfig":"30"},{"size":8857,"mtime":1746002020416,"results":"38","hashOfConfig":"30"},{"size":4899,"mtime":1746002020506,"results":"39","hashOfConfig":"30"},{"size":1906,"mtime":1746002020401,"results":"40","hashOfConfig":"30"},{"size":339,"mtime":1746002020521,"results":"41","hashOfConfig":"30"},{"size":750,"mtime":1746002020416,"results":"42","hashOfConfig":"30"},{"size":448,"mtime":1746002020416,"results":"43","hashOfConfig":"30"},{"size":6574,"mtime":1746002020506,"results":"44","hashOfConfig":"30"},{"size":3498,"mtime":1746002020506,"results":"45","hashOfConfig":"30"},{"size":6652,"mtime":1746002020506,"results":"46","hashOfConfig":"30"},{"size":355,"mtime":1746002020506,"results":"47","hashOfConfig":"30"},{"size":695,"mtime":1746002020506,"results":"48","hashOfConfig":"30"},{"size":961,"mtime":1746002020551,"results":"49","hashOfConfig":"30"},{"size":1117,"mtime":1746002020521,"results":"50","hashOfConfig":"30"},{"size":7252,"mtime":1746002020521,"results":"51","hashOfConfig":"30"},{"size":3604,"mtime":1746002020521,"results":"52","hashOfConfig":"30"},{"size":4418,"mtime":1746002020521,"results":"53","hashOfConfig":"30"},{"size":484,"mtime":1746002020536,"results":"54","hashOfConfig":"30"},{"size":5635,"mtime":1746855500512,"results":"55","hashOfConfig":"30"},{"size":6591,"mtime":1746002020416,"results":"56","hashOfConfig":"30"},{"size":4180,"mtime":1746002020416,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"14t6dg5",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"61"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"61"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\index.js",[],[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\UpdateUser.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\MainPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\PostsPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\PostPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\AddPostPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\LoginPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\EditPostPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\Dashboard.jsx",["149","150"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AiFillDelete } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PostItem } from '../widgets/PostItem';\r\nimport { getAllPostsNoParams, removePostFromAdmin } from '../shared/slices/post/postSlice';\r\nimport { getAllComments, removeCommentFromAdmin } from '../shared/slices/comment/commentSlice';  \r\nimport { toast } from 'react-toastify';\r\nimport { checkIsAuth, getMe, getAllUsers, removeUserFromAdmin } from '../shared/slices/auth/authSlice';\r\nimport { DashBoardSideBar } from '../widgets/DashBoardSideBar';\r\n\r\nexport const DashBoard = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isAuth = useSelector(checkIsAuth);\r\n  const { posts } = useSelector((state) => state.post);\r\n  const { comments } = useSelector((state) => state.comment); \r\n  const { users, user} = useSelector((state) => state.auth); \r\n  \r\n  const [activeSection, setActiveSection] = useState('overview'); // \"overview\" для основного контента\r\n  \r\n  const removeUserHandler = async (userId) => {\r\n    const confirmDelete = window.confirm('Вы уверены, что хотите удалить этого пользователя?');\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      await dispatch(removeUserFromAdmin(userId)).unwrap(); // Убедимся, что действие выполнено успешно\r\n      toast('Пользователь был удален');\r\n      dispatch(getAllUsers()); // Обновляем список \r\n    } catch (error) {\r\n      console.error('Ошибка при удалении пользователя:', error);\r\n      toast.error('Не удалось удалить пользователя');\r\n    }\r\n  };\r\n\r\n  const removePostHandler = async (PostId) => {\r\n    const confirmDelete = window.confirm('Вы уверены, что хотите удалить этот пост?');\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      await dispatch(removePostFromAdmin(PostId)).unwrap(); // Убедимся, что действие выполнено успешно\r\n      toast('Пост был удален');\r\n      dispatch(getAllPostsNoParams()); // Обновляем список \r\n    } catch (error) {\r\n      console.error('Ошибка при удалении Поста:', error);\r\n      toast.error('Не удалось удалить Пост');\r\n    }\r\n  };\r\n\r\n  const removeCommentHandler = async (CommentId) => {\r\n    const confirmDelete = window.confirm('Вы уверены, что хотите удалить этот комментарий?');\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n        const data = await dispatch(removeCommentFromAdmin(CommentId)).unwrap(); \r\n        toast('Комментарий был удален');\r\n        dispatch(getAllComments()); \r\n    } catch (error) {\r\n        console.error('Ошибка при удалении комментария:', error);\r\n        toast.error('Не удалось удалить комментарий');\r\n    }\r\n  };\r\n  \r\n  const stats = {\r\n    users: users?.length || 0,\r\n    posts: posts?.length || 0,\r\n    comments: comments?.length || 0,\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (user === null) {\r\n      dispatch(getMe()); \r\n      return;\r\n  }\r\n\r\n  if (!isAuth || user?.username !== 'Admin') {\r\n      navigate('/404'); \r\n      return;\r\n  }\r\n    dispatch(getAllPostsNoParams()); // Fetch posts\r\n    dispatch(getAllComments()); // Fetch comments\r\n    dispatch(getAllUsers()); // Fetch users\r\n  \r\n  }, [dispatch, navigate, user]); \r\n  \r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      < DashBoardSideBar setActiveSection={setActiveSection}/>\r\n\r\n      <div className=\"flex-1 bg-gray-100 p-6 overflow-y-auto\">\r\n        {activeSection === 'overview' && (\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            <div className=\"bg-white p-6 rounded-md shadow-lg\">\r\n              <div className=\"text-xl font-semibold mb-2\">Пользователи</div>\r\n              <div className=\"text-3xl font-bold text-gray-700\">{stats.users}</div> \r\n            </div>\r\n            <div className=\"bg-white p-6 rounded-md shadow-lg\">\r\n              <div className=\"text-xl font-semibold mb-2\">Посты</div>\r\n              <div className=\"text-3xl font-bold text-gray-700\">{stats.posts}</div>\r\n            </div>\r\n            <div className=\"bg-white p-6 rounded-md shadow-lg\">\r\n              <div className=\"text-xl font-semibold mb-2\">Комментарии</div>\r\n              <div className=\"text-3xl font-bold text-gray-700\">{stats.comments}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeSection === 'posts' && (\r\n          <div className=\"grid max-md:grid-cols-1 grid-cols-2 max-md:gap-4 gap-6\">\r\n            {posts?.map((post, idx) => (\r\n              <div \r\n                key={idx} \r\n                className=\"\"\r\n              >\r\n                <PostItem post={post} />\r\n                <button\r\n                  onClick={() => removePostHandler(post._id)}\r\n                  className=\"max-md:text-sm flex items-center justify-center p-2 mt-2 bg-gray-700 rounded-full text-gray-200 \r\n                  hover:bg-red-100 hover:text-red-600 transition-all shadow focus:outline-none focus:ring-2 focus:ring-red-400\"\r\n                  style={{ width: '300px' }}\r\n                >\r\n                  Delete Post\r\n                  <AiFillDelete size={20} />\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        )}\r\n\r\n        {activeSection === 'users' && (\r\n          <div>\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Пользователи</h2>\r\n            {users?.filter(user => user.username !== 'Admin')?.length > 0 ? (\r\n              users\r\n                ?.filter(user => user.username !== 'Admin')\r\n                ?.map(user => (\r\n                  <div\r\n                    key={user.id}\r\n                    className=\"flex justify-between items-center bg-white p-6 rounded-lg shadow-md mb-4 hover:shadow-xl transition-all duration-300\"\r\n                  >\r\n                    <div className=\"text-xl font-semibold text-gray-800\">{user.username}</div>\r\n                    <button\r\n                      onClick={() => removeUserHandler(user._id)}\r\n                      className=\"mt-4 flex items-center text-red-600 hover:text-red-800 focus:outline-none\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"w-5 h-5 inline-block mr-2\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                          stroke-width=\"2\"\r\n                          d=\"M6 18L18 6M6 6l12 12\"\r\n                        />\r\n                      </svg>\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                ))\r\n            ) : (\r\n              <p className=\"text-gray-500\">Нет пользователей.</p>\r\n            )}\r\n          </div>\r\n        )}\r\n   \r\n        {activeSection === 'comments' && (\r\n          <div>\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Комментарии</h2>\r\n            {comments?.length > 0 ? (\r\n              comments.map((cmt) => (\r\n                <div key={cmt._id} className=\"flex justify-between bg-white p-6 rounded-md shadow-lg mb-4\">\r\n                  <div className=\"text-gray-700\">{cmt.comment}</div>\r\n                  <button\r\n                    onClick={() => removeCommentHandler(cmt._id)}\r\n                    className=\"mt-4 flex items-center text-red-600 hover:text-red-800 focus:outline-none\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 inline-block mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-gray-500\">Нет комментариев.</p>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeSection === 'settings' && (\r\n          <div className=\"bg-white p-6 rounded-md shadow-lg\">\r\n            <p>Настройки админ-панели.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\RegisterPage.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\app\\App.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\store.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\pages\\404.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\app\\layout\\Layout.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\auth\\authSlice.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\comment\\commentSlice.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\slices\\post\\postSlice.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\api\\axios.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\shared\\router\\config.js",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\PostItem.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\CommentItem.jsx",["151"],[],"import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport avatarImg from \"../shared/assets/img/User-avatar.png\";\r\n\r\nexport const CommentItem = ({ cmt }) => {\r\n    const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    return (\r\n        <div className=\"flex items-center gap-4 max-md:p-1 p-3 hover:bg-gray-800 rounded-lg transition-all duration-200\">\r\n            <div className=\"flex items-center w-12 h-12\">\r\n                <img\r\n                    src={cmt?.authorAvatar ? `${API_URL}/${cmt.authorAvatar}` : avatarImg} \r\n                    className=\"w-10 h-10 rounded-full object-cover\"\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"flex justify-between w-full\">\r\n                <div className=\"text-gray-200 max-sm:text-xs text-sm leading-relaxed\">\r\n                    <strong>{cmt.username}</strong> {/* Display the author's username */}\r\n                    <p>{cmt.comment}</p>\r\n                </div>\r\n                <Moment date={cmt.createdAt} format=\"DD.MM.YYYY\" className=\"text-gray-500 text-xs\" />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\Navbar.jsx",["152"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkIsAuth, logout } from '../shared/slices/auth/authSlice';\r\nimport { toast } from 'react-toastify';\r\nimport { FaBars, FaSignOutAlt } from 'react-icons/fa';\r\nimport { pathKeys } from '../shared/router/config';\r\nimport { Drawer, List, ListItem } from '@mui/material';\r\nimport avatarImg from \"../shared/assets/img/User-avatar.png\";\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const isAuth = useSelector(checkIsAuth);\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const menuRef = useRef(null);\r\n    const { user } = useSelector((state) => state.auth); \r\n    const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    const handleResize = () => {\r\n        setIsMobile(window.innerWidth <= 720);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleResize(); \r\n        window.addEventListener('resize', handleResize);\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setIsMenuOpen(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const activeStyles = {\r\n        color: isMenuOpen ? 'black' : 'white',\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        window.localStorage.removeItem('token');\r\n        toast('Вы вышли из системы');\r\n        setIsMenuOpen(false);  \r\n        navigate('/'); \r\n    };\r\n\r\n    const handleLinkClick = () => {\r\n        setIsMenuOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className='header sticky top-0 z-10 flex p-4 justify-between items-center w-full'>\r\n            <span className=\"flex justify-center items-center w-20 h-8 bg-gradient-to-r from-indigo-600 to-purple-600 text-xs text-white font-semibold rounded-lg shadow-lg hover:scale-105 transform transition duration-300\">\r\n                <NavLink to=\"/\" className=\"flex items-center space-x-2\">\r\n                    <span>Blog Market</span>\r\n                </NavLink>\r\n            </span>\r\n\r\n            {isAuth && !isMobile && (\r\n                <ul className='flex gap-8'>\r\n                    <li>\r\n                        <NavLink\r\n                            to={'/'}\r\n                            className='text-xs text-gray-400 hover:text-white'\r\n                            style={({ isActive }) => (isActive ? activeStyles : undefined)}\r\n                        >\r\n                            Главная\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            to={pathKeys.posts.new()}\r\n                            className='text-xs text-gray-400 hover:text-white'\r\n                            style={({ isActive }) => (isActive ? activeStyles : undefined)}\r\n                        >\r\n                            Добавить пост\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            )}\r\n\r\n            <div>\r\n                {isMobile ? (\r\n                    <button\r\n                        className=\"text-2xl text-white\"\r\n                        onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n                    >\r\n                        <FaBars />\r\n                    </button>\r\n                ) : (\r\n                    <div>\r\n                        {isAuth ? (\r\n                            <div className=\"flex gap-x-4 items-center\">\r\n                                <Link\r\n                                    to={pathKeys.posts.root()}\r\n                                    className='border border-solid border-white text-white rounded-full'\r\n                                    onClick={handleLinkClick}\r\n                                >\r\n                                    <img \r\n                                        src={user?.imgUrl ? `${API_URL}/${user.imgUrl}` : avatarImg} \r\n                                        className=\"w-10 h-10 rounded-full object-cover\"\r\n                                    />\r\n                                </Link>\r\n                                <button\r\n                                    onClick={logoutHandler}\r\n                                    className=\"flex items-center justify-center w-32 py-2 px-4 bg-red-600 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 transition duration-300 ease-in-out\"\r\n                                >\r\n                                    <FaSignOutAlt className=\"mr-2\" /> Выйти\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <Link\r\n                                    to={pathKeys.login()}\r\n                                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-3 rounded transition duration-200 mx-2\"\r\n                                >\r\n                                    Войти\r\n                                </Link>\r\n                                <Link\r\n                                    to={pathKeys.register()}\r\n                                    className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-1 px-3 rounded transition duration-200 mx-2\"\r\n                                >\r\n                                    Регистрация\r\n                                </Link>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {isMobile && isMenuOpen && (\r\n                    <Drawer anchor=\"right\" open={isMenuOpen} onClose={() => setIsMenuOpen(false)}>\r\n                        <List sx={{ width: 250 }}>\r\n                            <ListItem className='text-lg' button onClick={() => { setIsMenuOpen(false); navigate(pathKeys.posts.root()); }}>\r\n                                Мой Профиль\r\n                            </ListItem>\r\n                            <ListItem button onClick={() => { setIsMenuOpen(false); navigate('/'); }}>\r\n                                Главная\r\n                            </ListItem>\r\n                            <ListItem button onClick={() => { setIsMenuOpen(false); navigate(pathKeys.posts.new()); }}>\r\n                                Добавить пост\r\n                            </ListItem>\r\n                            {isAuth && (\r\n                                <ListItem button onClick={logoutHandler}>\r\n                                    Выйти\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                    </Drawer>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\MainPageSideBar.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\DashBoardSideBar.jsx",["153","154"],[],"import React from 'react';\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\r\nimport { FaUser, FaBlog, FaCog, FaTachometerAlt, FaComment, FaSignOutAlt, FaHome } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { logout } from '../shared/slices/auth/authSlice';\r\n\r\nexport const DashBoardSideBar = ({setActiveSection}) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    \r\n    const handleNavClick = (section) => {\r\n      setActiveSection(section);\r\n    };\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        window.localStorage.removeItem('token');\r\n        toast('Вы вышли из системы');\r\n        navigate('/'); \r\n    };\r\n\r\n    return (\r\n        <div className=\"p-2 bg-gray-800 text-white shadow-lg transition-all\">\r\n            <nav>\r\n                <ul>\r\n                <li>\r\n                    <NavLink \r\n                    to=\"#\" \r\n                    onClick={() => handleNavClick('overview')} \r\n                    activeClassName=\"text-blue-400\"\r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md\"\r\n                    >\r\n                    <FaTachometerAlt  className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Overview</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                    to=\"/\" \r\n                    activeClassName=\"text-blue-400\"\r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md\"\r\n                    >\r\n                    <FaHome className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Главная</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                    to=\"#\" \r\n                    onClick={() => handleNavClick('posts')} \r\n                    activeClassName=\"text-blue-400\"\r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md\"\r\n                    >\r\n                    <FaBlog className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Посты</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                    to=\"#\" \r\n                    onClick={() => handleNavClick('users')} \r\n                    activeClassName=\"text-blue-400\"\r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md\"\r\n                    >\r\n                    <FaUser className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Пользователи</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                    to=\"#\" \r\n                    onClick={() => handleNavClick('comments')} \r\n                    activeClassName=\"text-blue-400\"\r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md\"\r\n                    >\r\n                    <FaComment className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Комментарии</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                    to=\"#\" \r\n                    onClick={() => handleNavClick('settings')} \r\n                    activeClassName=\"text-blue-400\"\r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md\"\r\n                    >\r\n                    <FaCog className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Настройки</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <button \r\n                    onClick={logoutHandler} \r\n                    className=\"flex items-center space-x-3 py-2 hover:bg-gray-700 px-3 rounded-md w-full mt-4 text-red-500\"\r\n                    >\r\n                    <FaSignOutAlt className=\"w-6 h-6\" /> \r\n                    <span className=\"max-md:hidden\">Выйти</span>\r\n                    </button>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\n","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\widgets\\PopularPosts.jsx",[],[],"C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\features\\PostItemContent.jsx",["155"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { FaVolumeUp, FaVolumeMute, FaPlay, FaPause, FaRedo } from 'react-icons/fa';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const PostItemContent = ({ post }) => {\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [userWantsToPlay, setUserWantsToPlay] = useState(false);\r\n    const API_URL = process.env.REACT_APP_API_URL;\r\n    const [isEnded, setIsEnded] = useState(false);\r\n\r\n    const videoRef = useRef(null);\r\n\r\n    const togglePlayPause = () => {\r\n        if (!userWantsToPlay) {\r\n            setUserWantsToPlay((prev) => !prev);\r\n        } else {\r\n            setUserWantsToPlay(false);\r\n            videoRef.current.pause();\r\n            setIsPlaying(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const videoElement = videoRef.current;\r\n        if (!videoElement) return;\r\n\r\n        if (userWantsToPlay) {\r\n            videoElement.play();\r\n            setIsPlaying(true);\r\n        } else {\r\n            videoElement.pause();\r\n            setIsPlaying(false);\r\n        }\r\n    }, [userWantsToPlay]);\r\n\r\n\r\n    const handleReplay = () => {\r\n        if (videoRef.current) {\r\n            videoRef.current.currentTime = 0;\r\n            videoRef.current.play();\r\n            setIsPlaying(true);\r\n            setIsEnded(false);\r\n        }\r\n    };\r\n\r\n    const toggleMute = () => {\r\n        setIsMuted((prev) => !prev);\r\n        if (videoRef.current) {\r\n            videoRef.current.muted = !isMuted;\r\n        }\r\n    };\r\n\r\n    const isVideo = (url) => {\r\n        const videoExtensions = ['.mp4', '.webm', '.ogg'];\r\n        return videoExtensions.some((ext) => url.endsWith(ext));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const videoElement = videoRef.current;\r\n        if (!videoElement) return;\r\n    \r\n        const handleVisibilityChange = (entries) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    if (userWantsToPlay) {\r\n                        videoElement.play();\r\n                        setIsPlaying(true);\r\n                    }\r\n                } else {\r\n                    videoElement.pause();\r\n                    setIsPlaying(false);\r\n                }\r\n            });\r\n        };\r\n    \r\n        const observer = new IntersectionObserver(handleVisibilityChange, {\r\n            threshold: 0.5,\r\n        });\r\n    \r\n        observer.observe(videoElement);\r\n    \r\n        // 🟡 ПРОВЕРКА: видно ли сейчас (в первый момент)\r\n        const rect = videoElement.getBoundingClientRect();\r\n        const isVisibleNow =\r\n            rect.top >= 0 &&\r\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight);\r\n        \r\n        if (isVisibleNow && userWantsToPlay) {\r\n            videoElement.play();\r\n            setIsPlaying(true);\r\n        }\r\n    \r\n        return () => {\r\n            observer.unobserve(videoElement);\r\n        };\r\n    }, [userWantsToPlay]);\r\n    \r\n    return (\r\n        <div className={`${post.imgUrl && isVideo(post.imgUrl)} transition-all`}>\r\n            {post.imgUrl && isVideo(post.imgUrl) ? (\r\n                <div className=\"relative group\">\r\n                    <video\r\n                        ref={videoRef}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        muted={isMuted}\r\n                        onEnded={() => {\r\n                            setIsPlaying(false);\r\n                            setIsEnded(true);\r\n                        }}\r\n                        className=\"object-cover w-full max-md:max-h-[250px] max-h-[500px]\"\r\n                    >\r\n                        <source src={`${API_URL}/${post.imgUrl}`} type=\"video/mp4\" />\r\n                        Ваш браузер не поддерживает видео.\r\n                    </video>\r\n\r\n                    <div className=\"absolute inset-0 flex justify-center items-center bg-black bg-opacity-50 group-hover:flex\">\r\n                        <button\r\n                            onClick={isEnded ? handleReplay : togglePlayPause}\r\n                            className=\"text-white opacity-70 hover:opacity-100 transition\"\r\n                        >\r\n                            {isEnded ? (\r\n                                <FaRedo className=\"max-md:w-8 max-md:h-8 w-20 h-20\" />\r\n                            ) : isPlaying ? (\r\n                                <FaPause className=\"max-md:w-8 max-md:h-8 w-20 h-20\" />\r\n                            ) : (\r\n                                <FaPlay className=\"max-md:w-8 max-md:h-8 w-20 h-20\" />\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <button\r\n                        onClick={toggleMute}\r\n                        className=\"absolute bottom-4 right-4 p-2 bg-black bg-opacity-50 rounded-full text-white\"\r\n                    >\r\n                        {isMuted ? (\r\n                            <FaVolumeMute className=\"w-6 h-6\" />\r\n                        ) : (\r\n                            <FaVolumeUp className=\"w-6 h-6\" />\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <img\r\n                    src={`${API_URL}/${post.imgUrl}`}\r\n                    alt=\"Post content\"\r\n                    className=\"object-cover w-full h-full max-md:max-h-[250px] max-h-[500px]\"\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\features\\PostItemBottom.jsx",["156"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AiFillEye, AiOutlineMessage, AiFillHeart, AiOutlineHeart, AiOutlineShareAlt } from 'react-icons/ai';\r\nimport { FaTelegramPlane, FaWhatsapp, FaLink, FaBookmark, FaRegBookmark } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleLike } from '../shared/slices/post/postSlice';\r\nimport { toggleFavorite } from '../shared/slices/auth/authSlice';\r\n\r\nimport { pathKeys } from '../shared/router/config';\r\n\r\nexport const PostItemBottom = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.auth.user);\r\n    const userId = user?._id;\r\n    const [isLiked, setIsLiked] = useState(userId && post.likes.includes(userId));\r\n    const [isFavorited, setIsFavorited] = useState(userId && user.favorites.includes(post._id));\r\n    const [isShareOpen, setIsShareOpen] = useState(false);\r\n    const FRONT_URL = process.env.REACT_APP_FRONT_URL;\r\n\r\n    const handleLike = () => {\r\n        if (userId) {\r\n            dispatch(toggleLike({ postId: post._id, userId }));\r\n            setIsLiked((prev) => !prev);\r\n        }\r\n    };\r\n    \r\n    const handleFavorite = () => {\r\n        if (userId) {\r\n            dispatch(toggleFavorite({ postId: post._id, userId })).then(() => {\r\n                setIsFavorited((prev) => !prev);\r\n            });\r\n        }\r\n    };\r\n\r\n    const toggleShareMenu = () => setIsShareOpen((prev) => !prev);\r\n\r\n    const copyToClipboard = () => {\r\n        const postUrl = `${FRONT_URL}/${post._id}`;\r\n        navigator.clipboard.writeText(postUrl)\r\n            .then(() => alert('Ссылка скопирована!'))\r\n            .catch(() => alert('Ошибка при копировании ссылки.'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isShareOpen) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'auto';\r\n        }\r\n\r\n        return () => {\r\n            document.body.style.overflow = 'auto';\r\n        };\r\n    }, [isShareOpen]);\r\n    \r\n    const postUrl = `${FRONT_URL}/${post._id}`;\r\n    const shareMessage = encodeURIComponent(`Смотри, что я нашел: ${post.title} - ${postUrl}`);\r\n\r\n    return (\r\n        <div className='p-4'>\r\n            {post.tags && post.tags.length > 0 && (\r\n                <div className='mb-2 flex flex-wrap gap-2'>\r\n                    {post.tags.map((tag, index) => (\r\n                        <span key={index} className='px-2 py-1 bg-gray-200 rounded-full text-sm text-gray-800'>\r\n                            #{tag}\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            <div className='flex gap-4 items-center mt-4 text-base text-gray-500'>\r\n                <button className='flex items-center gap-1' onClick={handleLike}>\r\n                    {isLiked ? (\r\n                        <AiFillHeart className='text-red-500' />\r\n                    ) : (\r\n                        <AiOutlineHeart />\r\n                    )}\r\n                    <span>{post.likes.length}</span>\r\n                </button>\r\n                <button className='flex items-center gap-1'>\r\n                    <AiFillEye />\r\n                    <span>{post.views}</span>\r\n                </button>\r\n                <Link to={pathKeys.posts.byId(post._id)} className='group flex items-center gap-1'>\r\n                    <AiOutlineMessage />\r\n                    <span>{post.comments?.length || 0}</span>\r\n                </Link>\r\n                <div className=\"ml-auto flex gap-4 items-center\">\r\n                    <button className='flex items-center gap-1' onClick={handleFavorite}>\r\n                        {isFavorited ? (\r\n                            <FaBookmark className='text-blue-500' />\r\n                        ) : (\r\n                            <FaRegBookmark className='text-gray-500' />\r\n                        )}\r\n                    </button>\r\n\r\n                    <div>\r\n                        <button\r\n                            className='flex items-center gap-1'\r\n                            onClick={toggleShareMenu}\r\n                        >\r\n                            <AiOutlineShareAlt />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {isShareOpen && (\r\n                    <div className='fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50'>\r\n                        <div className='bg-white border shadow-xl rounded-lg p-4 w-80'>\r\n                            <div className='flex items-center justify-between mb-3'>\r\n                                <div className='text-lg font-semibold text-gray-800'>Поделиться</div>\r\n                                <button onClick={toggleShareMenu} className='text-gray-500'>\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n                            <a\r\n                                href= {`https://web.telegram.org/k/#@your_bot_or_channel?start=${encodeURIComponent(postUrl)}`}\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                                className='flex items-center gap-2 text-blue-500 hover:text-blue-700 mb-2'\r\n                            >\r\n                                <FaTelegramPlane />\r\n                                Telegram\r\n                            </a>\r\n                            <a\r\n                                href={`https://wa.me/?text=${encodeURIComponent(shareMessage)}`}\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                                className='flex items-center gap-2 text-green-500 hover:text-green-700 mb-2'\r\n                            >\r\n                                <FaWhatsapp />\r\n                                WhatsApp\r\n                            </a>\r\n\r\n                            <div className='flex items-center gap-2 text-gray-500'>\r\n                                <FaLink />\r\n                                <button onClick={copyToClipboard} className='text-sm hover:text-gray-700'>\r\n                                    Копировать ссылку\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\neo\\Desktop\\veb\\23.02.23\\Blog\\frontend\\src\\features\\PostItemTop.jsx",[],[],{"ruleId":"157","severity":1,"message":"158","line":55,"column":15,"nodeType":"159","messageId":"160","endLine":55,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":84,"column":6,"nodeType":"163","endLine":84,"endColumn":32,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":11,"column":17,"nodeType":"167","endLine":14,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":106,"column":37,"nodeType":"167","endLine":109,"endColumn":39},{"ruleId":"157","severity":1,"message":"168","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"169","line":4,"column":23,"nodeType":"159","messageId":"160","endLine":4,"endColumn":34},{"ruleId":"157","severity":1,"message":"170","line":6,"column":11,"nodeType":"159","messageId":"160","endLine":6,"endColumn":15},{"ruleId":"157","severity":1,"message":"171","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":33},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuth'. Either include it or remove the dependency array.","ArrayExpression",["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'useSelector' is defined but never used.","'user' is assigned a value but never used.","'useRef' is defined but never used.",{"desc":"173","fix":"174"},"Update the dependencies array to be: [dispatch, isAuth, navigate, user]",{"range":"175","text":"176"},[3181,3207],"[dispatch, isAuth, navigate, user]"]