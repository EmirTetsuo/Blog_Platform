{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\n\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\n\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isEmpty(obj) {\n  return isObjectEmpty(obj) || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\n */\n\n\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value,\n    ...other\n  } = props;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const textareaRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, textareaRef);\n  const heightRef = React.useRef(null);\n  const hiddenTextareaRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const hiddenTextarea = hiddenTextareaRef.current;\n\n    if (!textarea || !hiddenTextarea) {\n      return undefined;\n    }\n\n    const containerWindow = ownerWindow(textarea);\n    const computedStyle = containerWindow.getComputedStyle(textarea); // If input's width is shrunk and it's not visible, don't sync height.\n\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n\n    hiddenTextarea.style.width = computedStyle.width;\n    hiddenTextarea.value = textarea.value || props.placeholder || 'x';\n\n    if (hiddenTextarea.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      hiddenTextarea.value += ' ';\n    }\n\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth); // The height of the inner content\n\n    const innerHeight = hiddenTextarea.scrollHeight; // Measure height of a textarea with a single row\n\n    hiddenTextarea.value = 'x';\n    const singleRowHeight = hiddenTextarea.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const didHeightChange = useEventCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return false;\n    }\n\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    return heightRef.current != null && heightRef.current !== outerHeightStyle;\n  });\n  const syncHeight = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return;\n    }\n\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      textarea.style.height = `${outerHeightStyle}px`;\n    }\n\n    textarea.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  const frameRef = React.useRef(-1);\n  useEnhancedEffect(() => {\n    const debouncedHandleResize = debounce(syncHeight);\n    const textarea = textareaRef?.current;\n\n    if (!textarea) {\n      return undefined;\n    }\n\n    const containerWindow = ownerWindow(textarea);\n    containerWindow.addEventListener('resize', debouncedHandleResize);\n    let resizeObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        if (didHeightChange()) {\n          // avoid \"ResizeObserver loop completed with undelivered notifications\" error\n          // by temporarily unobserving the textarea element while manipulating the height\n          // and reobserving one frame later\n          resizeObserver.unobserve(textarea);\n          cancelAnimationFrame(frameRef.current);\n          syncHeight();\n          frameRef.current = requestAnimationFrame(() => {\n            resizeObserver.observe(textarea);\n          });\n        }\n      });\n      resizeObserver.observe(textarea);\n    }\n\n    return () => {\n      debouncedHandleResize.clear();\n      cancelAnimationFrame(frameRef.current);\n      containerWindow.removeEventListener('resize', debouncedHandleResize);\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight, didHeightChange]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: style,\n      ...other\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: hiddenTextareaRef,\n      tabIndex: -1,\n      style: { ...styles.shadow,\n        ...style,\n        paddingTop: 0,\n        paddingBottom: 0\n      }\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"names":["React","PropTypes","unstable_debounce","debounce","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useEventCallback","useEventCallback","unstable_ownerWindow","ownerWindow","jsx","_jsx","jsxs","_jsxs","getStyleValue","value","parseInt","styles","shadow","visibility","position","overflow","height","top","left","transform","isObjectEmpty","object","_","isEmpty","obj","outerHeightStyle","overflowing","TextareaAutosize","forwardRef","props","forwardedRef","onChange","maxRows","minRows","style","other","current","isControlled","useRef","textareaRef","handleRef","heightRef","hiddenTextareaRef","calculateTextareaStyles","useCallback","textarea","hiddenTextarea","undefined","containerWindow","computedStyle","getComputedStyle","width","placeholder","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","didHeightChange","textareaStyles","syncHeight","frameRef","debouncedHandleResize","addEventListener","resizeObserver","ResizeObserver","unobserve","cancelAnimationFrame","requestAnimationFrame","observe","clear","removeEventListener","disconnect","handleChange","event","Fragment","children","ref","rows","className","readOnly","tabIndex","process","env","NODE_ENV","propTypes","string","oneOfType","number","func","arrayOf"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/Blog/frontend/node_modules/@mui/material/esm/TextareaAutosize/TextareaAutosize.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\nfunction isEmpty(obj) {\n  return isObjectEmpty(obj) || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value,\n    ...other\n  } = props;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const textareaRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, textareaRef);\n  const heightRef = React.useRef(null);\n  const hiddenTextareaRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const hiddenTextarea = hiddenTextareaRef.current;\n    if (!textarea || !hiddenTextarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    const computedStyle = containerWindow.getComputedStyle(textarea);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n    hiddenTextarea.style.width = computedStyle.width;\n    hiddenTextarea.value = textarea.value || props.placeholder || 'x';\n    if (hiddenTextarea.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      hiddenTextarea.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = hiddenTextarea.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    hiddenTextarea.value = 'x';\n    const singleRowHeight = hiddenTextarea.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const didHeightChange = useEventCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return false;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    return heightRef.current != null && heightRef.current !== outerHeightStyle;\n  });\n  const syncHeight = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      textarea.style.height = `${outerHeightStyle}px`;\n    }\n    textarea.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  const frameRef = React.useRef(-1);\n  useEnhancedEffect(() => {\n    const debouncedHandleResize = debounce(syncHeight);\n    const textarea = textareaRef?.current;\n    if (!textarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    containerWindow.addEventListener('resize', debouncedHandleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        if (didHeightChange()) {\n          // avoid \"ResizeObserver loop completed with undelivered notifications\" error\n          // by temporarily unobserving the textarea element while manipulating the height\n          // and reobserving one frame later\n          resizeObserver.unobserve(textarea);\n          cancelAnimationFrame(frameRef.current);\n          syncHeight();\n          frameRef.current = requestAnimationFrame(() => {\n            resizeObserver.observe(textarea);\n          });\n        }\n      });\n      resizeObserver.observe(textarea);\n    }\n    return () => {\n      debouncedHandleResize.clear();\n      cancelAnimationFrame(frameRef.current);\n      containerWindow.removeEventListener('resize', debouncedHandleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight, didHeightChange]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: style,\n      ...other\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: hiddenTextareaRef,\n      tabIndex: -1,\n      style: {\n        ...styles.shadow,\n        ...style,\n        paddingTop: 0,\n        paddingBottom: 0\n      }\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;"],"mappings":"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"},"metadata":{},"sourceType":"module"}