{"ast":null,"code":"import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\n\nconst getTextDecoration = _ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const transformedColor = ownerState.color; // check the `main` color first for a custom palette, then fallback to the color itself\n\n  const color = getPath(theme, `palette.${transformedColor}.main`, false) || getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}.mainChannel`) || getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","map":null,"metadata":{},"sourceType":"module"}