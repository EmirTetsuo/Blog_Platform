{"ast":null,"code":"function noop() {}\n\nconst localStorageManager = _ref => {\n  let {\n    key,\n    storageWindow\n  } = _ref;\n\n  if (!storageWindow && typeof window !== 'undefined') {\n    storageWindow = window;\n  }\n\n  return {\n    get(defaultValue) {\n      if (typeof window === 'undefined') {\n        return undefined;\n      }\n\n      if (!storageWindow) {\n        return defaultValue;\n      }\n\n      let value;\n\n      try {\n        value = storageWindow.localStorage.getItem(key);\n      } catch {// Unsupported\n      }\n\n      return value || defaultValue;\n    },\n\n    set: value => {\n      if (storageWindow) {\n        try {\n          storageWindow.localStorage.setItem(key, value);\n        } catch {// Unsupported\n        }\n      }\n    },\n    subscribe: handler => {\n      if (!storageWindow) {\n        return noop;\n      }\n\n      const listener = event => {\n        const value = event.newValue;\n\n        if (event.key === key) {\n          handler(value);\n        }\n      };\n\n      storageWindow.addEventListener('storage', listener);\n      return () => {\n        storageWindow.removeEventListener('storage', listener);\n      };\n    }\n  };\n};\n\nexport default localStorageManager;","map":{"version":3,"names":["noop","localStorageManager","key","storageWindow","window","get","defaultValue","undefined","value","localStorage","getItem","set","setItem","subscribe","handler","listener","event","newValue","addEventListener","removeEventListener"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/Blog/node_modules/@mui/system/esm/cssVars/localStorageManager.js"],"sourcesContent":["function noop() {}\nconst localStorageManager = ({\n  key,\n  storageWindow\n}) => {\n  if (!storageWindow && typeof window !== 'undefined') {\n    storageWindow = window;\n  }\n  return {\n    get(defaultValue) {\n      if (typeof window === 'undefined') {\n        return undefined;\n      }\n      if (!storageWindow) {\n        return defaultValue;\n      }\n      let value;\n      try {\n        value = storageWindow.localStorage.getItem(key);\n      } catch {\n        // Unsupported\n      }\n      return value || defaultValue;\n    },\n    set: value => {\n      if (storageWindow) {\n        try {\n          storageWindow.localStorage.setItem(key, value);\n        } catch {\n          // Unsupported\n        }\n      }\n    },\n    subscribe: handler => {\n      if (!storageWindow) {\n        return noop;\n      }\n      const listener = event => {\n        const value = event.newValue;\n        if (event.key === key) {\n          handler(value);\n        }\n      };\n      storageWindow.addEventListener('storage', listener);\n      return () => {\n        storageWindow.removeEventListener('storage', listener);\n      };\n    }\n  };\n};\nexport default localStorageManager;"],"mappings":"AAAA,SAASA,IAAT,GAAgB,CAAE;;AAClB,MAAMC,mBAAmB,GAAG,QAGtB;EAAA,IAHuB;IAC3BC,GAD2B;IAE3BC;EAF2B,CAGvB;;EACJ,IAAI,CAACA,aAAD,IAAkB,OAAOC,MAAP,KAAkB,WAAxC,EAAqD;IACnDD,aAAa,GAAGC,MAAhB;EACD;;EACD,OAAO;IACLC,GAAG,CAACC,YAAD,EAAe;MAChB,IAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;QACjC,OAAOG,SAAP;MACD;;MACD,IAAI,CAACJ,aAAL,EAAoB;QAClB,OAAOG,YAAP;MACD;;MACD,IAAIE,KAAJ;;MACA,IAAI;QACFA,KAAK,GAAGL,aAAa,CAACM,YAAd,CAA2BC,OAA3B,CAAmCR,GAAnC,CAAR;MACD,CAFD,CAEE,MAAM,CACN;MACD;;MACD,OAAOM,KAAK,IAAIF,YAAhB;IACD,CAfI;;IAgBLK,GAAG,EAAEH,KAAK,IAAI;MACZ,IAAIL,aAAJ,EAAmB;QACjB,IAAI;UACFA,aAAa,CAACM,YAAd,CAA2BG,OAA3B,CAAmCV,GAAnC,EAAwCM,KAAxC;QACD,CAFD,CAEE,MAAM,CACN;QACD;MACF;IACF,CAxBI;IAyBLK,SAAS,EAAEC,OAAO,IAAI;MACpB,IAAI,CAACX,aAAL,EAAoB;QAClB,OAAOH,IAAP;MACD;;MACD,MAAMe,QAAQ,GAAGC,KAAK,IAAI;QACxB,MAAMR,KAAK,GAAGQ,KAAK,CAACC,QAApB;;QACA,IAAID,KAAK,CAACd,GAAN,KAAcA,GAAlB,EAAuB;UACrBY,OAAO,CAACN,KAAD,CAAP;QACD;MACF,CALD;;MAMAL,aAAa,CAACe,gBAAd,CAA+B,SAA/B,EAA0CH,QAA1C;MACA,OAAO,MAAM;QACXZ,aAAa,CAACgB,mBAAd,CAAkC,SAAlC,EAA6CJ,QAA7C;MACD,CAFD;IAGD;EAvCI,CAAP;AAyCD,CAhDD;;AAiDA,eAAed,mBAAf"},"metadata":{},"sourceType":"module"}