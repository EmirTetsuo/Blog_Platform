{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false,\n  availableTags: ['Anime', 'Movie', 'Lifestyle', 'Gaming', 'Education', 'Food', 'Travel'],\n  totalPostsCount: 0 // Добавьте это поле\n\n};\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/posts', params);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}); // Получение всех постов с поисковым запросом\n\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async _ref => {\n  let {\n    searchQuery,\n    page\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.get(`/posts?searchQuery=${searchQuery}&page=${page}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getAllPostsNoParams = createAsyncThunk('post/getAllPostsNoParams', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/posts');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const removePost = createAsyncThunk('post/removePost', async id => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/posts/${id}`, id);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const updatePost = createAsyncThunk('post/updatePost', async updatedPost => {\n  try {\n    const {\n      data\n    } = await axios.put(`/posts/${updatedPost.id}`, updatedPost);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const toggleLike = createAsyncThunk('post/toggleLike', async _ref2 => {\n  let {\n    postId,\n    userId\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = await axios.put(`/posts/like/${postId}`);\n    return {\n      postId,\n      userId,\n      likes: data.post.likes\n    };\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const selectAvailableTags = state => state.post.availableTags;\nexport const getPostsByTag = createAsyncThunk('post/getPostsByTag', async _ref3 => {\n  let {\n    tag,\n    searchQuery,\n    page\n  } = _ref3;\n\n  try {\n    const {\n      data\n    } = await axios.get(`/posts/tag/${tag}?searchQuery=${searchQuery}&page=${page}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Создание поста\n    [createPost.pending]: state => {\n      state.loading = true;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts.push(action.payload);\n    },\n    [createPost.rejected]: state => {\n      state.loading = false;\n    },\n    // Получаение всех постов\n    [getAllPosts.pending]: state => {\n      state.loading = true;\n    },\n    [getAllPosts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload.posts;\n      state.popularPosts = action.payload.popularPosts;\n      state.totalPostsCount = action.payload.totalPostsCount; // Обновите это поле\n    },\n    [getAllPosts.rejected]: state => {\n      state.loading = false;\n    },\n    // Удаление поста\n    [removePost.pending]: state => {\n      state.loading = true;\n    },\n    [removePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = state.posts.filter(post => post._id !== action.payload._id);\n    },\n    [removePost.rejected]: state => {\n      state.loading = false;\n    },\n    // Обновление поста\n    [updatePost.pending]: state => {\n      state.loading = true;\n    },\n    [updatePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      const index = state.posts.findIndex(post => post._id === action.payload._id);\n      state.posts[index] = action.payload;\n    },\n    [updatePost.rejected]: state => {\n      state.loading = false;\n    },\n    [toggleLike.fulfilled]: (state, action) => {\n      const post = state.posts.find(post => post._id === action.payload.postId);\n\n      if (post) {\n        post.likes = action.payload.likes;\n      }\n    },\n    [getPostsByTag.pending]: state => {\n      state.loading = true;\n    },\n    [getPostsByTag.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload.posts;\n      state.totalPostsCount = action.payload.totalPostsCount; // Обновите это поле\n    },\n    [getPostsByTag.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","popularPosts","loading","availableTags","totalPostsCount","createPost","params","data","post","error","console","log","getAllPosts","searchQuery","page","get","getAllPostsNoParams","removePost","id","delete","updatePost","updatedPost","put","toggleLike","postId","userId","likes","selectAvailableTags","state","getPostsByTag","tag","postSlice","name","reducers","extraReducers","pending","fulfilled","action","push","payload","rejected","filter","_id","index","findIndex","find","reducer"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/js projects/blog-platform/frontend/src/redux/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from '../../../utils/axios'\n\nconst initialState = {\n    posts: [],\n    popularPosts: [],\n    loading: false,\n    availableTags: ['Anime', 'Movie', 'Lifestyle', 'Gaming', 'Education', 'Food', 'Travel'],\n    totalPostsCount: 0,  // Добавьте это поле\n}\n\nexport const createPost = createAsyncThunk(\n    'post/createPost',\n    async (params) => {\n        try {\n            const { data } = await axios.post('/posts', params)\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\n\n// Получение всех постов с поисковым запросом\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async ({ searchQuery, page }) => {\n    try {\n        const { data } = await axios.get(`/posts?searchQuery=${searchQuery}&page=${page}`);\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n});\n\n\nexport const getAllPostsNoParams = createAsyncThunk('post/getAllPostsNoParams', async () => {\n    try {\n        const { data } = await axios.get('/posts');\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n});\n\nexport const removePost = createAsyncThunk('post/removePost', async (id) => {\n    try {\n        const { data } = await axios.delete(`/posts/${id}`, id)\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}) \n\nexport const updatePost = createAsyncThunk(\n    'post/updatePost',\n    async (updatedPost) => {\n        try {\n            const { data } = await axios.put(\n                `/posts/${updatedPost.id}`,\n                updatedPost,\n            )\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const toggleLike = createAsyncThunk(\n    'post/toggleLike',\n    async ({ postId, userId }) => {\n        try {\n            const { data } = await axios.put(`/posts/like/${postId}`)\n            return { postId, userId, likes: data.post.likes }\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const selectAvailableTags = (state) => state.post.availableTags;\n\nexport const getPostsByTag = createAsyncThunk(\n    'post/getPostsByTag',\n    async ({ tag, searchQuery, page }) => {\n        try {\n            const { data } = await axios.get(`/posts/tag/${tag}?searchQuery=${searchQuery}&page=${page}`);\n            return data;\n        } catch (error) {\n            console.log(error);\n        }\n    },\n);\n\nexport const postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Создание поста\n        [createPost.pending]: (state) => {\n            state.loading = true\n        },\n        [createPost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts.push(action.payload)\n        },\n        [createPost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Получаение всех постов\n        [getAllPosts.pending]: (state) => {\n            state.loading = true\n        },\n        [ getAllPosts.fulfilled ]: (state, action) => {\n            state.loading = false;\n            state.posts = action.payload.posts;\n            state.popularPosts = action.payload.popularPosts;\n            state.totalPostsCount = action.payload.totalPostsCount;  // Обновите это поле\n        },\n        [getAllPosts.rejected]: (state) => {\n            state.loading = false\n        },\n        // Удаление поста\n        [removePost.pending]: (state) => {\n            state.loading = true\n        },\n        [removePost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = state.posts.filter(\n                (post) => post._id !== action.payload._id,\n            )\n        },\n        [removePost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Обновление поста\n        [updatePost.pending]: (state) => {\n            state.loading = true\n        },\n        [updatePost.fulfilled]: (state, action) => {\n            state.loading = false\n            const index = state.posts.findIndex(\n                (post) => post._id === action.payload._id,\n            )\n            state.posts[index] = action.payload\n        },\n        [updatePost.rejected]: (state) => {\n            state.loading = false\n        },\n        [toggleLike.fulfilled]: (state, action) => {\n            const post = state.posts.find((post) => post._id === action.payload.postId)\n            if (post) {\n                post.likes = action.payload.likes\n            }\n        },\n        [getPostsByTag.pending]: (state) => {\n            state.loading = true\n        },\n        [ getPostsByTag.fulfilled ]: (state, action) => {\n            state.loading = false;\n            state.posts = action.payload.posts;\n            state.totalPostsCount = action.payload.totalPostsCount;  // Обновите это поле\n        },\n        [getPostsByTag.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n}) \n\nexport default postSlice.reducer\n "],"mappings":"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"},"metadata":{},"sourceType":"module"}