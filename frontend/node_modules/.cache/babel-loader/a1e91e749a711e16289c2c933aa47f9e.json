{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neo\\\\Desktop\\\\veb\\\\23.02.23\\\\js projects\\\\blog-platform\\\\frontend\\\\src\\\\pages\\\\MainPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostItem from './PostItem'; // Ваш компонент для отображения постов\n\nimport { getAllPosts, getPostsByTag } from './actions'; // Ваши экшены\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts); // Все посты\n\n  const [searchQuery, setSearchQuery] = useState(''); // Поисковый запрос\n\n  const [activeTag, setActiveTag] = useState(null); // Активный тег\n\n  const [currentPage, setCurrentPage] = useState(1); // Текущая страница\n\n  const postsPerPage = 10; // Количество постов на одной странице\n  // Фильтруем посты на основе поискового запроса и активного тега\n\n  const filteredPosts = posts === null || posts === void 0 ? void 0 : posts.filter(post => {\n    const matchesSearchQuery = post.title.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesTag = activeTag ? post.tags.includes(activeTag) : true;\n    return matchesSearchQuery && matchesTag;\n  }); // Расчёт индексов для пагинации\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts === null || filteredPosts === void 0 ? void 0 : filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const totalPages = Math.ceil((filteredPosts === null || filteredPosts === void 0 ? void 0 : filteredPosts.length) / postsPerPage); // Общее количество страниц\n  // Хэндлер для смены страницы\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  }; // Эффект для получения постов при изменении поискового запроса или тега\n\n\n  useEffect(() => {\n    if (activeTag) {\n      dispatch(getPostsByTag({\n        tag: activeTag,\n        searchQuery,\n        page: currentPage\n      }));\n    } else {\n      dispatch(getAllPosts({\n        searchQuery,\n        page: currentPage\n      }));\n    }\n  }, [dispatch, searchQuery, activeTag, currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043A\\u0430\\u043C...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: currentPosts !== null && currentPosts !== void 0 && currentPosts.length ? currentPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, `post-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl text-center text-gray-400 py-20\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: totalPages > 1 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination-list\",\n        children: [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `pagination-item ${currentPage === index + 1 ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"AYlMHRB00/lXK1QxJZGBBoi7FXM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","PostItem","getAllPosts","getPostsByTag","MainPage","dispatch","posts","state","searchQuery","setSearchQuery","activeTag","setActiveTag","currentPage","setCurrentPage","postsPerPage","filteredPosts","filter","post","matchesSearchQuery","title","toLowerCase","includes","matchesTag","tags","indexOfLastPost","indexOfFirstPost","currentPosts","slice","totalPages","Math","ceil","length","handlePageChange","page","tag","e","target","value","map","index","Array","_"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/js projects/blog-platform/frontend/src/pages/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostItem from './PostItem'; // Ваш компонент для отображения постов\nimport { getAllPosts, getPostsByTag } from './actions'; // Ваши экшены\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts); // Все посты\n  const [searchQuery, setSearchQuery] = useState(''); // Поисковый запрос\n  const [activeTag, setActiveTag] = useState(null); // Активный тег\n  const [currentPage, setCurrentPage] = useState(1); // Текущая страница\n  const postsPerPage = 10; // Количество постов на одной странице\n\n  // Фильтруем посты на основе поискового запроса и активного тега\n  const filteredPosts = posts?.filter((post) => {\n    const matchesSearchQuery = post.title.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesTag = activeTag ? post.tags.includes(activeTag) : true;\n    return matchesSearchQuery && matchesTag;\n  });\n\n  // Расчёт индексов для пагинации\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts?.slice(indexOfFirstPost, indexOfLastPost);\n\n  const totalPages = Math.ceil(filteredPosts?.length / postsPerPage); // Общее количество страниц\n\n  // Хэндлер для смены страницы\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Эффект для получения постов при изменении поискового запроса или тега\n  useEffect(() => {\n    if (activeTag) {\n      dispatch(getPostsByTag({ tag: activeTag, searchQuery, page: currentPage }));\n    } else {\n      dispatch(getAllPosts({ searchQuery, page: currentPage }));\n    }\n  }, [dispatch, searchQuery, activeTag, currentPage]);\n\n  return (\n    <div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Поиск по заголовкам...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        {/* Возможно, здесь добавите фильтры по тегам */}\n      </div>\n\n      <div className=\"posts-list\">\n        {currentPosts?.length ? (\n          currentPosts.map((post, index) => (\n            <PostItem key={`post-${index}`} post={post} />\n          ))\n        ) : (\n          <div className=\"text-xl text-center text-gray-400 py-20\">\n            <p>Постов нет.</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"pagination\">\n        {totalPages > 1 && (\n          <ul className=\"pagination-list\">\n            {[...Array(totalPages)].map((_, index) => (\n              <li key={index} className={`pagination-item ${currentPage === index + 1 ? 'active' : ''}`}>\n                <button onClick={() => handlePageChange(index + 1)}>\n                  {index + 1}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}