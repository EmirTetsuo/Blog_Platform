{"ast":null,"code":"import clsx from 'clsx'; // Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\n// Use it directly from Base UI once it's a package dependency.\n\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const thirdCharCode = key.charCodeAt(2);\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65\n  /* A */\n  && thirdCharCode <= 90\n  /* Z */\n  && typeof value === 'function';\n}\n\nexport default function mergeSlotProps(externalSlotProps, defaultSlotProps) {\n  if (!externalSlotProps) {\n    return defaultSlotProps;\n  }\n\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\n    const handlers = {};\n    Object.keys(defaultSlotPropsValue).forEach(key => {\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\n        // only compose the handlers if both default and external slot props match the event handler\n        handlers[key] = function () {\n          externalSlotPropsValue[key](...arguments);\n          defaultSlotPropsValue[key](...arguments);\n        };\n      }\n    });\n    return handlers;\n  }\n\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\n    return ownerState => {\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps({ ...ownerState,\n        ...defaultSlotPropsValue\n      }) : externalSlotProps;\n      const className = clsx(ownerState?.className, defaultSlotPropsValue?.className, externalSlotPropsValue?.className);\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\n      return { ...defaultSlotPropsValue,\n        ...externalSlotPropsValue,\n        ...handlers,\n        ...(!!className && {\n          className\n        }),\n        ...(defaultSlotPropsValue?.style && externalSlotPropsValue?.style && {\n          style: { ...defaultSlotPropsValue.style,\n            ...externalSlotPropsValue.style\n          }\n        }),\n        ...(defaultSlotPropsValue?.sx && externalSlotPropsValue?.sx && {\n          sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\n        })\n      };\n    };\n  }\n\n  const typedDefaultSlotProps = defaultSlotProps;\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\n  const className = clsx(typedDefaultSlotProps?.className, externalSlotProps?.className);\n  return { ...defaultSlotProps,\n    ...externalSlotProps,\n    ...handlers,\n    ...(!!className && {\n      className\n    }),\n    ...(typedDefaultSlotProps?.style && externalSlotProps?.style && {\n      style: { ...typedDefaultSlotProps.style,\n        ...externalSlotProps.style\n      }\n    }),\n    ...(typedDefaultSlotProps?.sx && externalSlotProps?.sx && {\n      sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\n    })\n  };\n}","map":{"version":3,"names":["clsx","isEventHandler","key","value","thirdCharCode","charCodeAt","mergeSlotProps","externalSlotProps","defaultSlotProps","extractHandlers","externalSlotPropsValue","defaultSlotPropsValue","handlers","Object","keys","forEach","ownerState","className","style","sx","Array","isArray","typedDefaultSlotProps"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/Blog/frontend/node_modules/@mui/material/esm/utils/mergeSlotProps.js"],"sourcesContent":["import clsx from 'clsx';\n\n// Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\n// Use it directly from Base UI once it's a package dependency.\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const thirdCharCode = key.charCodeAt(2);\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65 /* A */ && thirdCharCode <= 90 /* Z */ && typeof value === 'function';\n}\nexport default function mergeSlotProps(externalSlotProps, defaultSlotProps) {\n  if (!externalSlotProps) {\n    return defaultSlotProps;\n  }\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\n    const handlers = {};\n    Object.keys(defaultSlotPropsValue).forEach(key => {\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\n        // only compose the handlers if both default and external slot props match the event handler\n        handlers[key] = (...args) => {\n          externalSlotPropsValue[key](...args);\n          defaultSlotPropsValue[key](...args);\n        };\n      }\n    });\n    return handlers;\n  }\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\n    return ownerState => {\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps({\n        ...ownerState,\n        ...defaultSlotPropsValue\n      }) : externalSlotProps;\n      const className = clsx(ownerState?.className, defaultSlotPropsValue?.className, externalSlotPropsValue?.className);\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\n      return {\n        ...defaultSlotPropsValue,\n        ...externalSlotPropsValue,\n        ...handlers,\n        ...(!!className && {\n          className\n        }),\n        ...(defaultSlotPropsValue?.style && externalSlotPropsValue?.style && {\n          style: {\n            ...defaultSlotPropsValue.style,\n            ...externalSlotPropsValue.style\n          }\n        }),\n        ...(defaultSlotPropsValue?.sx && externalSlotPropsValue?.sx && {\n          sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\n        })\n      };\n    };\n  }\n  const typedDefaultSlotProps = defaultSlotProps;\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\n  const className = clsx(typedDefaultSlotProps?.className, externalSlotProps?.className);\n  return {\n    ...defaultSlotProps,\n    ...externalSlotProps,\n    ...handlers,\n    ...(!!className && {\n      className\n    }),\n    ...(typedDefaultSlotProps?.style && externalSlotProps?.style && {\n      style: {\n        ...typedDefaultSlotProps.style,\n        ...externalSlotProps.style\n      }\n    }),\n    ...(typedDefaultSlotProps?.sx && externalSlotProps?.sx && {\n      sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\n    })\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}