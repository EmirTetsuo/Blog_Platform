{"ast":null,"code":"import axios from '../../../utils/axios';\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false\n};\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/posts', params);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/posts');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const removePost = createAsyncThunk('post/removePost', async id => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/posts/${id}`, id);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const updatePost = createAsyncThunk('post/updatePost', async updatedPost => {\n  try {\n    const {\n      data\n    } = await axios.put(`/posts/${updatedPost.id}`, updatedPost);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Создание поста\n    [createPost.pending]: state => {\n      state.loading = true;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts.push(action.payload);\n    },\n    [createPost.rejected]: state => {\n      state.loading = false;\n    },\n    // Получаение всех постов\n    [getAllPosts.pending]: state => {\n      state.loading = true;\n    },\n    [getAllPosts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload.posts;\n      state.popularPosts = action.payload.popularPosts;\n    },\n    [getAllPosts.rejected]: state => {\n      state.loading = false;\n    },\n    // Удаление поста\n    [removePost.pending]: state => {\n      state.loading = true;\n    },\n    [removePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = state.posts.filter(post => post._id !== action.payload._id);\n    },\n    [removePost.rejected]: state => {\n      state.loading = false;\n    },\n    // Обновление поста\n    [updatePost.pending]: state => {\n      state.loading = true;\n    },\n    [updatePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      const index = state.posts.findIndex(post => post._id === action.payload._id);\n      state.posts[index] = action.payload;\n    },\n    [updatePost.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["axios","initialState","posts","popularPosts","loading","createPost","createAsyncThunk","params","data","post","error","console","log","getAllPosts","get","removePost","id","delete","updatePost","updatedPost","put","postSlice","createSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","filter","_id","index","findIndex","reducer"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/js projects/blog-platform/frontend/src/redux/features/post/postSlice.js"],"sourcesContent":["import axios from '../../../utils/axios'\n\nconst initialState = {\n    posts: [],\n    popularPosts: [],\n    loading: false,\n}\n\nexport const createPost = createAsyncThunk(\n    'post/createPost',\n    async (params) => {\n        try {\n            const { data } = await axios.post('/posts', params)\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async () => {\n    try {\n        const { data } = await axios.get('/posts')\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n})\n\nexport const removePost = createAsyncThunk('post/removePost', async (id) => {\n    try {\n        const { data } = await axios.delete(`/posts/${id}`, id)\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}) \n\nexport const updatePost = createAsyncThunk(\n    'post/updatePost',\n    async (updatedPost) => {\n        try {\n            const { data } = await axios.put(\n                `/posts/${updatedPost.id}`,\n                updatedPost,\n            )\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Создание поста\n        [createPost.pending]: (state) => {\n            state.loading = true\n        },\n        [createPost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts.push(action.payload)\n        },\n        [createPost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Получаение всех постов\n        [getAllPosts.pending]: (state) => {\n            state.loading = true\n        },\n        [getAllPosts.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = action.payload.posts\n            state.popularPosts = action.payload.popularPosts\n        },\n        [getAllPosts.rejected]: (state) => {\n            state.loading = false\n        },\n        // Удаление поста\n        [removePost.pending]: (state) => {\n            state.loading = true\n        },\n        [removePost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = state.posts.filter(\n                (post) => post._id !== action.payload._id,\n            )\n        },\n        [removePost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Обновление поста\n        [updatePost.pending]: (state) => {\n            state.loading = true\n        },\n        [updatePost.fulfilled]: (state, action) => {\n            state.loading = false\n            const index = state.posts.findIndex(\n                (post) => post._id === action.payload._id,\n            )\n            state.posts[index] = action.payload\n        },\n        [updatePost.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default postSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}