{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  comments: [],\n  loading: false\n};\nexport const createComment = createAsyncThunk('comment/createComment', async _ref => {\n  let {\n    postId,\n    comment,\n    authorAvatar\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.post(`/comments/${postId}`, {\n      postId,\n      comment,\n      authorAvatar // Передаем аватар\n\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getPostComments = createAsyncThunk('comment/getPostComments', async postId => {\n  try {\n    const {\n      data\n    } = await axios.get(`/posts/comments/${postId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getAllComments = createAsyncThunk('comment/getAllComments', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/comments'); // Запрос на получение всех комментариев\n\n    return data;\n  } catch (error) {\n    console.log(\"Error fetching comments:\", error);\n  }\n});\nexport const removeComment = createAsyncThunk('comment/removeComment', async commentId => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/comments/comments/${commentId}`);\n    return data;\n  } catch (error) {\n    console.log(\"Error removing comment:\", error);\n  }\n});\nexport const commentSlice = createSlice({\n  name: 'comment',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Создание поста \n    [createComment.pending]: state => {\n      state.loading = true;\n    },\n    [createComment.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments.push(action.payload);\n    },\n    [createComment.rejected]: state => {\n      state.loading = false;\n    },\n    // все комменты\n    [getAllComments.pending]: state => {\n      state.loading = true;\n    },\n    [getAllComments.fulfilled]: (state, action) => {\n      state.loading = false; // console.log(\"Comments received in slice:\", action.payload); \n\n      state.comments = action.payload;\n    },\n    [getAllComments.rejected]: state => {\n      state.loading = false;\n    },\n    // Получение комментов\n    [getPostComments.pending]: state => {\n      state.loading = true;\n    },\n    [getPostComments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments = action.payload;\n    },\n    [getPostComments.rejected]: state => {\n      state.loading = false;\n    },\n    // Removing a comment\n    [removeComment.pending]: state => {\n      state.loading = true;\n    },\n    [removeComment.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments = state.comments.filter(comment => comment.id !== action.payload);\n    },\n    [removeComment.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","comments","loading","createComment","postId","comment","authorAvatar","data","post","error","console","log","getPostComments","get","getAllComments","removeComment","commentId","delete","commentSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","filter","id","reducer"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/js projects/blog-platform/frontend/src/redux/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from '../../../utils/axios'\n\nconst initialState = {\n    comments: [],\n    loading: false,\n}\n\nexport const createComment = createAsyncThunk(\n    'comment/createComment',\n    async ({ postId, comment, authorAvatar }) => {\n        try {\n            const { data } = await axios.post(`/comments/${postId}`, {\n                postId,\n                comment,\n                authorAvatar, // Передаем аватар\n            });\n            return data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n);\n\nexport const getPostComments = createAsyncThunk(\n    'comment/getPostComments',\n    async (postId) => {\n        try {\n            const { data } = await axios.get(`/posts/comments/${postId}`)\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const getAllComments = createAsyncThunk(\n    'comment/getAllComments',\n    async () => {\n        try {\n            const { data } = await axios.get('/comments');  // Запрос на получение всех комментариев\n            return data;\n        } catch (error) {\n            console.log(\"Error fetching comments:\", error); \n        }\n    },\n);\n\nexport const removeComment = createAsyncThunk(\n    'comment/removeComment',\n    async (commentId) => {\n        try {\n            const { data } = await axios.delete(`/comments/comments/${commentId}`);\n            return data;\n        } catch (error) {\n            console.log(\"Error removing comment:\", error);\n        }\n    }\n);\n\n\nexport const commentSlice = createSlice({\n    name: 'comment',\n    initialState, \n    reducers: {},\n    extraReducers: {\n        // Создание поста \n        [createComment.pending]: (state) => {\n            state.loading = true\n        },\n        [createComment.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments.push(action.payload)\n        }, \n        [createComment.rejected]: (state) => {\n            state.loading = false\n        },\n        // все комменты\n        [getAllComments.pending]: (state) => {\n            state.loading = true\n        },\n        [getAllComments.fulfilled]: (state, action) => {\n            state.loading = false;\n            // console.log(\"Comments received in slice:\", action.payload); \n            state.comments = action.payload;  \n        },\n        [getAllComments.rejected]: (state) => {\n            state.loading = false\n        },\n        // Получение комментов\n        [getPostComments.pending]: (state) => {\n            state.loading = true\n        },\n        [getPostComments.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments = action.payload\n        },\n        [getPostComments.rejected]: (state) => {\n            state.loading = false\n        },\n        // Removing a comment\n        [removeComment.pending]: (state) => {\n            state.loading = true\n        },\n        [removeComment.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments = state.comments.filter(\n                (comment) => comment.id !== action.payload\n            )\n        },\n        [removeComment.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default commentSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}