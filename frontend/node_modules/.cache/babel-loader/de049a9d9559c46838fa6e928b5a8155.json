{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport debounce from \"../utils/debounce.js\";\nimport animate from \"../internal/animate.js\";\nimport ScrollbarSize from \"./ScrollbarSize.js\";\nimport TabScrollButton from \"../TabScrollButton/index.js\";\nimport useEventCallback from \"../utils/useEventCallback.js\";\nimport tabsClasses, { getTabsUtilityClass } from \"./tabsClasses.js\";\nimport ownerDocument from \"../utils/ownerDocument.js\";\nimport ownerWindow from \"../utils/ownerWindow.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return list.firstChild;\n};\n\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return list.lastChild;\n};\n\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    list: ['list', 'flexContainer', vertical && 'flexContainerVertical', vertical && 'vertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\n\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    overflow: 'hidden',\n    minHeight: 48,\n    // Add iOS momentum scrolling for iOS < 13.0\n    WebkitOverflowScrolling: 'touch',\n    display: 'flex',\n    variants: [{\n      props: _ref2 => {\n        let {\n          ownerState\n        } = _ref2;\n        return ownerState.vertical;\n      },\n      style: {\n        flexDirection: 'column'\n      }\n    }, {\n      props: _ref3 => {\n        let {\n          ownerState\n        } = _ref3;\n        return ownerState.scrollButtonsHideMobile;\n      },\n      style: {\n        [`& .${tabsClasses.scrollButtons}`]: {\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          }\n        }\n      }\n    }]\n  };\n}));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: _ref4 => {\n      let {\n        ownerState\n      } = _ref4;\n      return ownerState.fixed;\n    },\n    style: {\n      overflowX: 'hidden',\n      width: '100%'\n    }\n  }, {\n    props: _ref5 => {\n      let {\n        ownerState\n      } = _ref5;\n      return ownerState.hideScrollbar;\n    },\n    style: {\n      // Hide dimensionless scrollbar on macOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    }\n  }, {\n    props: _ref6 => {\n      let {\n        ownerState\n      } = _ref6;\n      return ownerState.scrollableX;\n    },\n    style: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    }\n  }, {\n    props: _ref7 => {\n      let {\n        ownerState\n      } = _ref7;\n      return ownerState.scrollableY;\n    },\n    style: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    }\n  }]\n});\nconst List = styled('div', {\n  name: 'MuiTabs',\n  slot: 'List',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.list, styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})({\n  display: 'flex',\n  variants: [{\n    props: _ref8 => {\n      let {\n        ownerState\n      } = _ref8;\n      return ownerState.vertical;\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: _ref9 => {\n      let {\n        ownerState\n      } = _ref9;\n      return ownerState.centered;\n    },\n    style: {\n      justifyContent: 'center'\n    }\n  }]\n});\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(memoTheme(_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return {\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create(),\n    variants: [{\n      props: {\n        indicatorColor: 'primary'\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette.primary.main\n      }\n    }, {\n      props: {\n        indicatorColor: 'secondary'\n      },\n      style: {\n        backgroundColor: (theme.vars || theme).palette.secondary.main\n      }\n    }, {\n      props: _ref11 => {\n        let {\n          ownerState\n        } = _ref11;\n        return ownerState.vertical;\n      },\n      style: {\n        height: '100%',\n        width: 2,\n        right: 0\n      }\n    }]\n  };\n}));\nconst TabsScrollbarSize = styled(ScrollbarSize)({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n\n  }\n});\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent,\n    // TODO: remove in v7 (deprecated in v6)\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    slots = {},\n    slotProps = {},\n    TabIndicatorProps = {},\n    // TODO: remove in v7 (deprecated in v6)\n    TabScrollButtonProps = {},\n    // TODO: remove in v7 (deprecated in v6)\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false,\n    ...other\n  } = props;\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = { ...props,\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  };\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      indicator: TabIndicatorProps,\n      scrollButton: TabScrollButtonProps,\n      ...slotProps\n    }\n  };\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 && // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n\n    if (vertical) {\n      startIndicator = 'top';\n\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n\n      if (tabMeta && tabsMeta) {\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + tabsMeta.scrollLeft);\n      }\n    }\n\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n\n    if (typeof indicatorStyle[startIndicator] !== 'number' || typeof indicatorStyle[size] !== 'number') {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = function (scrollValue) {\n    let {\n      animation = true\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  };\n\n  const [ScrollbarSlot, {\n    onChange: scrollbarOnChange,\n    ...scrollbarSlotProps\n  }] = useSlot('scrollbar', {\n    className: clsx(classes.scrollableX, classes.hideScrollbar),\n    elementType: TabsScrollbarSize,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    ownerState\n  }); // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    scrollbarOnChange?.(scrollbarWidth);\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, [scrollbarOnChange]);\n  const [ScrollButtonsSlot, scrollButtonSlotProps] = useSlot('scrollButtons', {\n    className: clsx(classes.scrollButtons, TabScrollButtonProps.className),\n    elementType: TabScrollButton,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      orientation,\n      slots: {\n        StartScrollButtonIcon: slots.startScrollButtonIcon || slots.StartScrollButtonIcon,\n        EndScrollButtonIcon: slots.endScrollButtonIcon || slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps,\n        endScrollButtonIcon: endScrollButtonIconProps\n      }\n    }\n  });\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(ScrollbarSlot, { ...scrollbarSlotProps,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonsSlot, {\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll,\n      ...scrollButtonSlotProps\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonsSlot, {\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll,\n      ...scrollButtonSlotProps\n    }) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    let resizeObserver;\n    /**\n     * @type {MutationCallback}\n     */\n\n    const handleMutation = records => {\n      records.forEach(record => {\n        record.removedNodes.forEach(item => {\n          resizeObserver?.unobserve(item);\n        });\n        record.addedNodes.forEach(item => {\n          resizeObserver?.observe(item);\n        });\n      });\n      handleResize();\n      updateScrollButtonState();\n    };\n\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let mutationObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n\n    if (typeof MutationObserver !== 'undefined') {\n      mutationObserver = new MutationObserver(handleMutation);\n      mutationObserver.observe(tabListRef.current, {\n        childList: true\n      });\n    }\n\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      mutationObserver?.disconnect();\n      resizeObserver?.disconnect();\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp?.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const [IndicatorSlot, indicatorSlotProps] = useSlot('indicator', {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    elementType: TabsIndicator,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      style: indicatorStyle\n    }\n  });\n\n  const indicator = /*#__PURE__*/_jsx(IndicatorSlot, { ...indicatorSlotProps\n  });\n\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue,\n      ...(childIndex === 1 && value === false && !child.props.tabIndex ? {\n        tabIndex: 0\n      } : {})\n    });\n  });\n\n  const handleKeyDown = event => {\n    // Check if a modifier key (Alt, Shift, Ctrl, Meta) is pressed\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = currentFocus.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: TabsRoot,\n    externalForwardedProps: { ...externalForwardedProps,\n      ...other,\n      component\n    },\n    ownerState\n  });\n  const [ScrollerSlot, scrollerSlotProps] = useSlot('scroller', {\n    ref: tabsRef,\n    className: classes.scroller,\n    elementType: TabsScroller,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      }\n    }\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    ref: tabListRef,\n    className: clsx(classes.list, classes.flexContainer),\n    elementType: List,\n    externalForwardedProps,\n    ownerState,\n    getSlotProps: handlers => ({ ...handlers,\n      onKeyDown: event => {\n        handleKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    })\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, { ...rootSlotProps,\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(ScrollerSlot, { ...scrollerSlotProps,\n      children: [/*#__PURE__*/_jsx(ListSlot, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        role: \"tablist\",\n        ...listSlotProps,\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @deprecated use the `slots.scrollButtons` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    indicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scrollbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scrollButtons: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scroller: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.elementType,\n    EndScrollButtonIcon: PropTypes.elementType,\n    indicator: PropTypes.elementType,\n    list: PropTypes.elementType,\n    root: PropTypes.elementType,\n    scrollbar: PropTypes.elementType,\n    scrollButtons: PropTypes.elementType,\n    scroller: PropTypes.elementType,\n    startScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Props applied to the tab indicator element.\n   * @deprecated use the `slotProps.indicator` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.\n   * @deprecated use the `slotProps.scrollButtons` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  - `fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;","map":{"version":3,"names":["React","isFragment","PropTypes","clsx","refType","composeClasses","useRtl","useSlotProps","styled","useTheme","memoTheme","useDefaultProps","debounce","animate","ScrollbarSize","TabScrollButton","useEventCallback","tabsClasses","getTabsUtilityClass","ownerDocument","ownerWindow","useSlot","jsx","_jsx","jsxs","_jsxs","nextItem","list","item","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","useUtilityClasses","ownerState","vertical","fixed","hideScrollbar","scrollableX","scrollableY","centered","scrollButtonsHideMobile","classes","slots","root","scroller","indicator","scrollButtons","TabsRoot","name","slot","overridesResolver","props","styles","theme","overflow","minHeight","WebkitOverflowScrolling","display","variants","style","flexDirection","breakpoints","down","TabsScroller","position","flex","whiteSpace","overflowX","width","scrollbarWidth","overflowY","List","flexContainer","flexContainerVertical","justifyContent","TabsIndicator","height","bottom","transition","transitions","create","indicatorColor","backgroundColor","vars","palette","primary","main","secondary","right","TabsScrollbarSize","defaultIndicatorStyle","warnedOnceTabPresent","Tabs","forwardRef","inProps","ref","isRtl","ariaLabel","ariaLabelledBy","action","children","childrenProp","className","component","allowScrollButtonsMobile","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","slotProps","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","other","scrollable","scrollStart","start","end","clientSize","size","startScrollButtonIconProps","elementType","StartScrollButtonIcon","externalSlotProps","startScrollButtonIcon","endScrollButtonIconProps","EndScrollButtonIcon","endScrollButtonIcon","process","env","NODE_ENV","console","error","mounted","setMounted","useState","indicatorStyle","setIndicatorStyle","displayStartScroll","setDisplayStartScroll","displayEndScroll","setDisplayEndScroll","updateScrollObserver","setUpdateScrollObserver","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","externalForwardedProps","scrollButton","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollWidth","top","left","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","startIndicator","newIndicatorStyle","dStart","Math","abs","dSize","scroll","scrollValue","animation","duration","standard","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","ScrollbarSlot","scrollbarOnChange","scrollbarSlotProps","shouldForwardComponentProp","handleScrollbarSizeChange","useCallback","ScrollButtonsSlot","scrollButtonSlotProps","additionalProps","getConditionalElements","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","direction","onClick","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","useEffect","handleResize","resizeObserver","handleMutation","records","forEach","record","removedNodes","unobserve","addedNodes","observe","win","addEventListener","mutationObserver","ResizeObserver","child","MutationObserver","childList","clear","removeEventListener","disconnect","tabListChildren","IntersectionObserver","firstTab","lastTab","observerOptions","threshold","handleScrollButtonStart","entries","isIntersecting","firstObserver","handleScrollButtonEnd","lastObserver","undefined","useImperativeHandle","updateIndicator","updateScrollButtons","IndicatorSlot","indicatorSlotProps","childIndex","Children","map","isValidElement","childValue","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","altKey","shiftKey","ctrlKey","metaKey","activeElement","role","previousItemKey","nextItemKey","key","preventDefault","RootSlot","rootSlotProps","ScrollerSlot","scrollerSlotProps","ListSlot","listSlotProps","getSlotProps","handlers","onKeyDown","propTypes","bool","string","node","object","oneOfType","oneOf","func","shape","scrollbar","sx","arrayOf","any"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/Blog/frontend/node_modules/@mui/material/esm/Tabs/Tabs.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport debounce from \"../utils/debounce.js\";\nimport animate from \"../internal/animate.js\";\nimport ScrollbarSize from \"./ScrollbarSize.js\";\nimport TabScrollButton from \"../TabScrollButton/index.js\";\nimport useEventCallback from \"../utils/useEventCallback.js\";\nimport tabsClasses, { getTabsUtilityClass } from \"./tabsClasses.js\";\nimport ownerDocument from \"../utils/ownerDocument.js\";\nimport ownerWindow from \"../utils/ownerWindow.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return list.firstChild;\n};\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return list.lastChild;\n};\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n      wrappedOnce = true;\n    }\n\n    // Same logic as useAutocomplete.js\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    list: ['list', 'flexContainer', vertical && 'flexContainerVertical', vertical && 'vertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  minHeight: 48,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  display: 'flex',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollButtonsHideMobile,\n    style: {\n      [`& .${tabsClasses.scrollButtons}`]: {\n        [theme.breakpoints.down('sm')]: {\n          display: 'none'\n        }\n      }\n    }\n  }]\n})));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.fixed,\n    style: {\n      overflowX: 'hidden',\n      width: '100%'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.hideScrollbar,\n    style: {\n      // Hide dimensionless scrollbar on macOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollableX,\n    style: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollableY,\n    style: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    }\n  }]\n});\nconst List = styled('div', {\n  name: 'MuiTabs',\n  slot: 'List',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.list, styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})({\n  display: 'flex',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.centered,\n    style: {\n      justifyContent: 'center'\n    }\n  }]\n});\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create(),\n  variants: [{\n    props: {\n      indicatorColor: 'primary'\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette.primary.main\n    }\n  }, {\n    props: {\n      indicatorColor: 'secondary'\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette.secondary.main\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      height: '100%',\n      width: 2,\n      right: 0\n    }\n  }]\n})));\nconst TabsScrollbarSize = styled(ScrollbarSize)({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n});\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent,\n    // TODO: remove in v7 (deprecated in v6)\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    slots = {},\n    slotProps = {},\n    TabIndicatorProps = {},\n    // TODO: remove in v7 (deprecated in v6)\n    TabScrollButtonProps = {},\n    // TODO: remove in v7 (deprecated in v6)\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false,\n    ...other\n  } = props;\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = {\n    ...props,\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  };\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      indicator: TabIndicatorProps,\n      scrollButton: TabScrollButtonProps,\n      ...slotProps\n    }\n  };\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect();\n      // create a new object with ClientRect class props + scrollLeft\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n    let tabMeta;\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 &&\n          // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n    if (vertical) {\n      startIndicator = 'top';\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n      if (tabMeta && tabsMeta) {\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + tabsMeta.scrollLeft);\n      }\n    }\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n    if (typeof indicatorStyle[startIndicator] !== 'number' || typeof indicatorStyle[size] !== 'number') {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n    }\n    scroll(scrollValue);\n  };\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n        break;\n      }\n      totalSize += tab[clientSize];\n    }\n    return totalSize;\n  };\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  };\n  const [ScrollbarSlot, {\n    onChange: scrollbarOnChange,\n    ...scrollbarSlotProps\n  }] = useSlot('scrollbar', {\n    className: clsx(classes.scrollableX, classes.hideScrollbar),\n    elementType: TabsScrollbarSize,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    ownerState\n  });\n\n  // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    scrollbarOnChange?.(scrollbarWidth);\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, [scrollbarOnChange]);\n  const [ScrollButtonsSlot, scrollButtonSlotProps] = useSlot('scrollButtons', {\n    className: clsx(classes.scrollButtons, TabScrollButtonProps.className),\n    elementType: TabScrollButton,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      orientation,\n      slots: {\n        StartScrollButtonIcon: slots.startScrollButtonIcon || slots.StartScrollButtonIcon,\n        EndScrollButtonIcon: slots.endScrollButtonIcon || slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps,\n        endScrollButtonIcon: endScrollButtonIconProps\n      }\n    }\n  });\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(ScrollbarSlot, {\n      ...scrollbarSlotProps,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonsSlot, {\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll,\n      ...scrollButtonSlotProps\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonsSlot, {\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll,\n      ...scrollButtonSlotProps\n    }) : null;\n    return conditionalElements;\n  };\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    let resizeObserver;\n\n    /**\n     * @type {MutationCallback}\n     */\n    const handleMutation = records => {\n      records.forEach(record => {\n        record.removedNodes.forEach(item => {\n          resizeObserver?.unobserve(item);\n        });\n        record.addedNodes.forEach(item => {\n          resizeObserver?.observe(item);\n        });\n      });\n      handleResize();\n      updateScrollButtonState();\n    };\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let mutationObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n    if (typeof MutationObserver !== 'undefined') {\n      mutationObserver = new MutationObserver(handleMutation);\n      mutationObserver.observe(tabListRef.current, {\n        childList: true\n      });\n    }\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      mutationObserver?.disconnect();\n      resizeObserver?.disconnect();\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp?.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const [IndicatorSlot, indicatorSlotProps] = useSlot('indicator', {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    elementType: TabsIndicator,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      style: indicatorStyle\n    }\n  });\n  const indicator = /*#__PURE__*/_jsx(IndicatorSlot, {\n    ...indicatorSlotProps\n  });\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue,\n      ...(childIndex === 1 && value === false && !child.props.tabIndex ? {\n        tabIndex: 0\n      } : {})\n    });\n  });\n  const handleKeyDown = event => {\n    // Check if a modifier key (Alt, Shift, Ctrl, Meta) is pressed\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement;\n    // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n    const role = currentFocus.getAttribute('role');\n    if (role !== 'tab') {\n      return;\n    }\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n      default:\n        break;\n    }\n  };\n  const conditionalElements = getConditionalElements();\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: TabsRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    ownerState\n  });\n  const [ScrollerSlot, scrollerSlotProps] = useSlot('scroller', {\n    ref: tabsRef,\n    className: classes.scroller,\n    elementType: TabsScroller,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      }\n    }\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    ref: tabListRef,\n    className: clsx(classes.list, classes.flexContainer),\n    elementType: List,\n    externalForwardedProps,\n    ownerState,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onKeyDown: event => {\n        handleKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    })\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(ScrollerSlot, {\n      ...scrollerSlotProps,\n      children: [/*#__PURE__*/_jsx(ListSlot, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        role: \"tablist\",\n        ...listSlotProps,\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The component used to render the scroll buttons.\n   * @deprecated use the `slots.scrollButtons` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes /* @typescript-to-proptypes-ignore */.oneOf(['auto', false, true]),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    indicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scrollbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scrollButtons: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scroller: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.elementType,\n    EndScrollButtonIcon: PropTypes.elementType,\n    indicator: PropTypes.elementType,\n    list: PropTypes.elementType,\n    root: PropTypes.elementType,\n    scrollbar: PropTypes.elementType,\n    scrollButtons: PropTypes.elementType,\n    scroller: PropTypes.elementType,\n    startScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Props applied to the tab indicator element.\n   * @deprecated use the `slotProps.indicator` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n  /**\n   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.\n   * @deprecated use the `slotProps.scrollButtons` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  - `fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;"],"mappings":"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"},"metadata":{},"sourceType":"module"}