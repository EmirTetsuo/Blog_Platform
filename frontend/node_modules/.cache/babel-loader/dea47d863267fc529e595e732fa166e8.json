{"ast":null,"code":"'use client'; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridLegacyContext from \"./GridLegacyContext.js\";\nimport gridLegacyClasses, { getGridLegacyUtilityClass } from \"./gridLegacyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet warnedOnce = false;\n\nfunction warnAboutDeprecatedGridLegacy() {\n  if (!warnedOnce && process.env.NODE_ENV === 'development') {\n    warnedOnce = true;\n    console.warn('MUI: The GridLegacy component is deprecated. See https://mui.com/material-ui/migration/upgrade-to-grid-v2/ for migration instructions.\\n');\n  }\n}\n\nexport function generateGridLegacy(_ref) {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection(_ref2) {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridLegacyClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\n\nfunction extractZeroValueBreakpointKeys(_ref3) {\n  let {\n    breakpoints,\n    values\n  } = _ref3;\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\n\nexport function generateRowGap(_ref4) {\n  let {\n    theme,\n    ownerState\n  } = _ref4;\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `calc(-1 * ${themeSpacing})`,\n          [`& > .${gridLegacyClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n\n      return {\n        marginTop: 0,\n        [`& > .${gridLegacyClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap(_ref5) {\n  let {\n    theme,\n    ownerState\n  } = _ref5;\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        const negativeValue = `calc(-1 * ${themeSpacing})`;\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridLegacyClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridLegacyClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints) {\n  let styles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  } // in case of object `spacing`\n\n\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridLegacyRoot = styled('div', {\n  name: 'MuiGridLegacy',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = []; // in case of grid item\n\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})( // FIXME(romgrk): Can't use memoTheme here\n_ref6 => {\n  let {\n    ownerState\n  } = _ref6;\n  return {\n    boxSizing: 'border-box',\n    ...(ownerState.container && {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    }),\n    ...(ownerState.item && {\n      margin: 0 // For instance, it's useful when used with a `figure` element.\n\n    }),\n    ...(ownerState.zeroMinWidth && {\n      minWidth: 0\n    }),\n    ...(ownerState.wrap !== 'wrap' && {\n      flexWrap: ownerState.wrap\n    })\n  };\n}, generateDirection, generateRowGap, generateColumnGap, generateGridLegacy);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  } // in case of object `spacing`\n\n\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = []; // in case of grid item\n\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridLegacyUtilityClass, classes);\n};\n/**\n * @deprecated Use the [`Grid`](https://mui.com/material-ui/react-grid/) component instead.\n */\n\n\nconst GridLegacy = /*#__PURE__*/React.forwardRef(function GridLegacy(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGridLegacy'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  React.useEffect(() => {\n    warnAboutDeprecatedGridLegacy();\n  }, []);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridLegacyContext); // columns set with default breakpoint unit of 12\n\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = { ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = { ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridLegacyContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridLegacyRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLegacy.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('GridLegacy', GridLegacy); // eslint-disable-next-line no-useless-concat\n\n  GridLegacy['propTypes' + ''] = { // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...GridLegacy.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\n\nexport default GridLegacy;","map":{"version":3,"names":["React","PropTypes","clsx","handleBreakpoints","unstable_resolveBreakpointValues","resolveBreakpointValues","extendSxProp","composeClasses","requirePropFactory","styled","useDefaultProps","useTheme","GridLegacyContext","gridLegacyClasses","getGridLegacyUtilityClass","jsx","_jsx","warnedOnce","warnAboutDeprecatedGridLegacy","process","env","NODE_ENV","console","warn","generateGridLegacy","theme","ownerState","size","breakpoints","keys","reduce","globalStyles","breakpoint","styles","flexBasis","flexGrow","maxWidth","flexShrink","width","columnsBreakpointValues","values","columns","columnValue","undefined","Math","round","more","container","item","columnSpacing","themeSpacing","spacing","fullWidth","Object","assign","up","generateDirection","directionValues","direction","propValue","output","flexDirection","startsWith","extractZeroValueBreakpointKeys","nonZeroKey","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","generateRowGap","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","marginTop","paddingTop","includes","generateColumnGap","columnSpacingValues","negativeValue","marginLeft","paddingLeft","resolveSpacingStyles","Number","isNaN","String","spacingStyles","value","push","GridLegacyRoot","name","slot","overridesResolver","props","wrap","zeroMinWidth","breakpointsStyles","root","boxSizing","display","flexWrap","margin","minWidth","resolveSpacingClasses","classes","className","useUtilityClasses","spacingClasses","breakpointsClasses","slots","GridLegacy","forwardRef","inProps","ref","themeProps","columnsProp","columnSpacingProp","component","rowSpacingProp","other","useEffect","columnsContext","useContext","breakpointsValues","otherFiltered","Provider","children","as","propTypes","node","object","string","oneOfType","arrayOf","number","elementType","bool","oneOf","lg","md","sm","sx","func","xl","xs","requireProp"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/Blog/frontend/node_modules/@mui/material/esm/GridLegacy/GridLegacy.js"],"sourcesContent":["'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridLegacyContext from \"./GridLegacyContext.js\";\nimport gridLegacyClasses, { getGridLegacyUtilityClass } from \"./gridLegacyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet warnedOnce = false;\nfunction warnAboutDeprecatedGridLegacy() {\n  if (!warnedOnce && process.env.NODE_ENV === 'development') {\n    warnedOnce = true;\n    console.warn('MUI: The GridLegacy component is deprecated. See https://mui.com/material-ui/migration/upgrade-to-grid-v2/ for migration instructions.\\n');\n  }\n}\nexport function generateGridLegacy({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridLegacyClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `calc(-1 * ${themeSpacing})`,\n          [`& > .${gridLegacyClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridLegacyClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        const negativeValue = `calc(-1 * ${themeSpacing})`;\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridLegacyClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridLegacyClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridLegacyRoot = styled('div', {\n  name: 'MuiGridLegacy',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\n({\n  ownerState\n}) => ({\n  boxSizing: 'border-box',\n  ...(ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }),\n  ...(ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }),\n  ...(ownerState.zeroMinWidth && {\n    minWidth: 0\n  }),\n  ...(ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  })\n}), generateDirection, generateRowGap, generateColumnGap, generateGridLegacy);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridLegacyUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid`](https://mui.com/material-ui/react-grid/) component instead.\n */\nconst GridLegacy = /*#__PURE__*/React.forwardRef(function GridLegacy(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGridLegacy'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  React.useEffect(() => {\n    warnAboutDeprecatedGridLegacy();\n  }, []);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridLegacyContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = {\n    ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = {\n    ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridLegacyContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridLegacyRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLegacy.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('GridLegacy', GridLegacy);\n  // eslint-disable-next-line no-useless-concat\n  GridLegacy['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...GridLegacy.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\nexport default GridLegacy;"],"mappings":"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"},"metadata":{},"sourceType":"module"}