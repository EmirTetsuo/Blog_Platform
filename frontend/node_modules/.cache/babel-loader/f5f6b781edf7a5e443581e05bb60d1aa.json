{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\n\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n    autoFocus = true,\n    children,\n    className,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering,\n      ...TransitionProps\n    } = {},\n    variant = 'selectedMenu',\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = { ...props,\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n\n  let activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      list: MenuListProps,\n      transition: TransitionProps,\n      paper: PaperProps,\n      ...slotProps\n    }\n  };\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\n    className: classes.paper,\n    elementType: MenuPaper,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    ownerState\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    className: clsx(classes.list, MenuListProps.className),\n    elementType: MenuMenuList,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    getSlotProps: handlers => ({ ...handlers,\n      onKeyDown: event => {\n        handleListKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    }),\n    ownerState\n  });\n  const resolvedTransitionProps = typeof externalForwardedProps.slotProps.transition === 'function' ? externalForwardedProps.slotProps.transition(ownerState) : externalForwardedProps.slotProps.transition;\n  return /*#__PURE__*/_jsx(MenuRoot, {\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      root: slots.root,\n      paper: PaperSlot,\n      backdrop: slots.backdrop,\n      ...(slots.transition && {\n        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover\n        transition: slots.transition\n      })\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps,\n      backdrop: typeof slotProps.backdrop === 'function' ? slotProps.backdrop(ownerState) : slotProps.backdrop,\n      transition: { ...resolvedTransitionProps,\n        onEntering: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          handleEntering(...args);\n          resolvedTransitionProps?.onEntering?.(...args);\n        }\n      }\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    ownerState: ownerState,\n    ...other,\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(ListSlot, {\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant,\n      ...listSlotProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\n   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    list: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"names":["React","isFragment","PropTypes","clsx","composeClasses","HTMLElementType","useRtl","useSlotProps","MenuList","Popover","PopoverPaper","rootShouldForwardProp","styled","useDefaultProps","getMenuUtilityClass","useSlot","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","autoFocus","children","className","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","variant","slotProps","other","isRtl","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","direction","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","externalForwardedProps","transition","rootSlotProps","elementType","externalSlotProps","PaperSlot","paperSlotProps","shouldForwardComponentProp","ListSlot","listSlotProps","getSlotProps","handlers","onKeyDown","resolvedTransitionProps","anchorOrigin","transformOrigin","backdrop","args","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","string","isRequired","shape","sx","arrayOf","oneOf","number","appear","enter","exit"],"sources":["C:/Users/neo/Desktop/veb/23.02.23/Blog/frontend/node_modules/@mui/material/esm/Menu/Menu.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n    autoFocus = true,\n    children,\n    className,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering,\n      ...TransitionProps\n    } = {},\n    variant = 'selectedMenu',\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = {\n    ...props,\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      list: MenuListProps,\n      transition: TransitionProps,\n      paper: PaperProps,\n      ...slotProps\n    }\n  };\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\n    className: classes.paper,\n    elementType: MenuPaper,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    ownerState\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    className: clsx(classes.list, MenuListProps.className),\n    elementType: MenuMenuList,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onKeyDown: event => {\n        handleListKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    }),\n    ownerState\n  });\n  const resolvedTransitionProps = typeof externalForwardedProps.slotProps.transition === 'function' ? externalForwardedProps.slotProps.transition(ownerState) : externalForwardedProps.slotProps.transition;\n  return /*#__PURE__*/_jsx(MenuRoot, {\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      root: slots.root,\n      paper: PaperSlot,\n      backdrop: slots.backdrop,\n      ...(slots.transition && {\n        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover\n        transition: slots.transition\n      })\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps,\n      backdrop: typeof slotProps.backdrop === 'function' ? slotProps.backdrop(ownerState) : slotProps.backdrop,\n      transition: {\n        ...resolvedTransitionProps,\n        onEntering: (...args) => {\n          handleEntering(...args);\n          resolvedTransitionProps?.onEntering?.(...args);\n        }\n      }\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    ownerState: ownerState,\n    ...other,\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(ListSlot, {\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant,\n      ...listSlotProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\n   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    list: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module"}